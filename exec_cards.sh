job='$(job)'
Cluster='$(Cluster)'
Process='$(Process)'
MASTERDIR='$MASTERDIR'
_CONDOR_SCRATCH_DIR='$_CONDOR_SCRATCH_DIR'
STORAGE_DIR='$STORAGE_DIR'

i=$(sed -n "1p"  MG5_aMC_v2_6_1/i.sh)
a=$(sed -n "$i p"  MG5_aMC_v2_6_1/my.sh)
b=$(sed -n "$i p"  MG5_aMC_v2_6_1/mx.sh)
c=$(sed -n "$i p"  MG5_aMC_v2_6_1/gx.sh)
d=$(sed -n "$i p"  MG5_aMC_v2_6_1/gq.sh)

mkdir  MG5_aMC_v2_6_1/$a-$b-$d-$c/
mkdir  MG5_aMC_v2_6_1/$a-$b-$d-$c/Cards/
cat >  MG5_aMC_v2_6_1/$a-$b-$d-$c/Cards/param_card.dat <<EOF

######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5                       ####
######################################################################
###################################
## INFORMATION FOR CKMBLOCK
###################################
BLOCK CKMBLOCK # 
      1 2.277360e-01 # cabi
###################################
## INFORMATION FOR DMINPUTS
###################################
BLOCK DMINPUTS # 
      1 0.000000e+00 # gvxc
      2 $c # gvxd
      3 0.000000e+00 # gaxd
      4 $d # gvd11
      5 $d # gvu11
      6 $d # gvd22
      7 $d # gvu22
      8 $d # gvd33
      9 $d # gvu33
      10 0.000000e+00 # gad11
      11 0.000000e+00 # gau11
      12 0.000000e+00 # gad22
      13 0.000000e+00 # gau22
      14 0.000000e+00 # gad33
      15 0.000000e+00 # gau33
      16 0.000000e+00 # gvh
###################################
## INFORMATION FOR LOOP
###################################
BLOCK LOOP # 
      1 9.118800e+01 # mu_r
###################################
## INFORMATION FOR MASS
###################################
BLOCK MASS # 
      6 1.720000e+02 # mt
      15 1.777000e+00 # mta
      23 9.118760e+01 # mz
      25 1.250000e+02 # mh
      51 $b # mxc
      52 $b # mxd
      55 $a # my1
      5000001 1.000000e+01 # mxr
      1 0.000000e+00 # d : 0.0
      2 0.000000e+00 # u : 0.0
      3 0.000000e+00 # s : 0.0
      4 0.000000e+00 # c : 0.0
      5 0.000000e+00 # b : 0.0
      11 0.000000e+00 # e- : 0.0
      12 0.000000e+00 # ve : 0.0
      13 0.000000e+00 # mu- : 0.0
      14 0.000000e+00 # vm : 0.0
      16 0.000000e+00 # vt : 0.0
      21 0.000000e+00 # g : 0.0
      22 0.000000e+00 # a : 0.0
      24 7.982436e+01 # w+ : cmath.sqrt(mz__exp__2/2. + cmath.sqrt(mz__exp__4/4. - (aew*cmath.pi*mz__exp__2)/(gf*sqrt__2)))
      9000002 9.118760e+01 # ghz : mz
      9000003 7.982436e+01 # ghwp : mw
      9000004 7.982436e+01 # ghwm : mw
###################################
## INFORMATION FOR SMINPUTS
###################################
BLOCK SMINPUTS # 
      1 1.279000e+02 # aewm1
      2 1.166370e-05 # gf
      3 1.184000e-01 # as
###################################
## INFORMATION FOR YUKAWA
###################################
BLOCK YUKAWA # 
      6 1.720000e+02 # ymt
      15 1.777000e+00 # ymtau
###################################
## INFORMATION FOR DECAY
###################################
DECAY   6 1.508336e+00 # WT
DECAY  23 2.495200e+00 # WZ
DECAY  24 2.085000e+00 # WW
DECAY  25 4.070000e-03 # WH
DECAY  55 auto # WY1
## Dependent parameters, given by model restrictions.
## Those values should be edited following the
## analytical expression. MG5 ignores those values
## but they are important for interfacing the output of MG5
## to external program such as Pythia.
DECAY  1 0.000000 # d : 0.0
DECAY  2 0.000000 # u : 0.0
DECAY  3 0.000000 # s : 0.0
DECAY  4 0.000000 # c : 0.0
DECAY  5 0.000000 # b : 0.0
DECAY  11 0.000000 # e- : 0.0
DECAY  12 0.000000 # ve : 0.0
DECAY  13 0.000000 # mu- : 0.0
DECAY  14 0.000000 # vm : 0.0
DECAY  15 0.000000 # ta- : 0.0
DECAY  16 0.000000 # vt : 0.0
DECAY  21 0.000000 # g : 0.0
DECAY  22 0.000000 # a : 0.0
DECAY  51 0.000000 # xc : 0.0
DECAY  52 0.000000 # xd : 0.0
DECAY  5000001 0.000000 # xr : 0.0
DECAY  9000002 2.495200 # ghz : WZ
DECAY  9000003 2.085000 # ghwp : WW
DECAY  9000004 2.085000 # ghwm : WW
#===========================================================
# QUANTUM NUMBERS OF NEW STATE(S) (NON SM PDG CODE)
#===========================================================

Block QNUMBERS 5000001  # xr
        1 0  # 3 times electric charge
        2 1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 0  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 51  # xc
        1 0  # 3 times electric charge
        2 1  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 52  # xd
        1 0  # 3 times electric charge
        2 2  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 1  # Particle/Antiparticle distinction (0=own anti)
Block QNUMBERS 55  # y1
        1 0  # 3 times electric charge
        2 3  # number of spin states (2S+1)
        3 1  # colour rep (1: singlet, 3: triplet, 8: octet)
        4 0  # Particle/Antiparticle distinction (0=own anti)

EOF

cat >  MG5_aMC_v2_6_1/$a-$b-$d-$c/Cards/run_card.dat <<EOF

#***********************************************************************
#                        MadGraph5_aMC@NLO                             *
#                                                                      *
#                      run_card.dat aMC@NLO                            *
#                                                                      *
#  This file is used to set the parameters of the run.                 *
#                                                                      *
#  Some notation/conventions:                                          *
#                                                                      *
#   Lines starting with a hash (#) are info or comments                *
#                                                                      *
#   mind the format:   value    = variable     ! comment               *
#                                                                      *
#   Some of the values of variables can be list. These can either be   *
#   comma or space separated.                                          *
#***********************************************************************
#
#*******************                                                 
# Running parameters
#*******************                                                 
#
#***********************************************************************
# Tag name for the run (one word)              
#***********************************************************************
  tag_1 = run_tag ! name of the run
#***********************************************************************
# Number of LHE events (and their normalization) and the required      *
# (relative) accuracy on the Xsec.                                     *
# These values are ignored for fixed order runs                        *
#***********************************************************************
  100   = nevents ! Number of unweighted events requested
  -1.0  = req_acc ! Required accuracy (-1=auto determined from nevents)
  -1    = nevt_job ! Max number of events per job in event generation.
                 !  (-1= no split).
#***********************************************************************
# Normalize the weights of LHE events such that they sum or average to *
# the total cross section                                              *
#***********************************************************************
  average       = event_norm ! valid settings: average, sum, bias
#***********************************************************************
# Number of points per itegration channel (ignored for aMC@NLO runs)   *
#***********************************************************************
  0.01  = req_acc_fo ! Required accuracy (-1=ignored, and use the
                           ! number of points and iter. below)
# These numbers are ignored except if req_acc_FO is equal to -1
  5000  = npoints_fo_grid ! number of points to setup grids
  4     = niters_fo_grid ! number of iter. to setup grids
  10000 = npoints_fo ! number of points to compute Xsec
  6     = niters_fo ! number of iter. to compute Xsec
#***********************************************************************
# Random number seed                                                   *
#***********************************************************************
  0     = iseed ! rnd seed (0=assigned automatically=default))
#***********************************************************************
# Collider type and energy                                             *
#***********************************************************************
  1     = lpp1 ! beam 1 type (0 = no PDF)
  1     = lpp2 ! beam 2 type (0 = no PDF)
  6500.0        = ebeam1 ! beam 1 energy in GeV
  6500.0        = ebeam2 ! beam 2 energy in GeV
#***********************************************************************
# PDF choice: this automatically fixes also alpha_s(MZ) and its evol.  *
#***********************************************************************
  nn23lo1       = pdlabel ! PDF set
  230000        = lhaid ! If pdlabel=lhapdf, this is the lhapdf number. Only
              ! numbers for central PDF sets are allowed. Can be a list;
              ! PDF sets beyond the first are included via reweighting.
#***********************************************************************
# Include the NLO Monte Carlo subtr. terms for the following parton    *
# shower (HERWIG6 | HERWIGPP | PYTHIA6Q | PYTHIA6PT | PYTHIA8)         *
# WARNING: PYTHIA6PT works only for processes without FSR!!!!          *
#***********************************************************************
  HERWIG6       = parton_shower
  1.0   = shower_scale_factor ! multiply default shower starting
                                  ! scale by this factor
#***********************************************************************
# Renormalization and factorization scales                             *
# (Default functional form for the non-fixed scales is the sum of      *
# the transverse masses divided by two of all final state particles    * 
# and partons. This can be changed in SubProcesses/set_scales.f or via *
# dynamical_scale_choice option)                                       *
#***********************************************************************
  False = fixed_ren_scale ! if .true. use fixed ren scale
  False = fixed_fac_scale ! if .true. use fixed fac scale
  91.118        = mur_ref_fixed ! fixed ren reference scale
  91.118        = muf_ref_fixed ! fixed fact reference scale
  -1    = dynamical_scale_choice ! Choose one (or more) of the predefined
           ! dynamical choices. Can be a list; scale choices beyond the
           ! first are included via reweighting
  1.0   = mur_over_ref ! ratio of current muR over reference muR
  1.0   = muf_over_ref ! ratio of current muF over reference muF
#*********************************************************************** 
# Reweight variables for scale dependence and PDF uncertainty          *
#***********************************************************************
  1.0, 2.0, 0.5 = rw_rscale ! muR factors to be included by reweighting
  1.0, 2.0, 0.5 = rw_fscale ! muF factors to be included by reweighting
  True  = reweight_scale ! Reweight to get scale variation using the
            ! rw_rscale and rw_fscale factors. Should be a list of
            ! booleans of equal length to dynamical_scale_choice to
            ! specify for which choice to include scale dependence.
  False = reweight_pdf ! Reweight to get PDF uncertainty. Should be a
            ! list booleans of equal length to lhaid to specify for
            !  which PDF set to include the uncertainties.
#***********************************************************************
# Store reweight information in the LHE file for off-line model-    
# parameter reweighting at NLO+PS accuracy                             *
#***********************************************************************
  False = store_rwgt_info ! Store info for reweighting in LHE file
#***********************************************************************
# ickkw parameter:                                                     *
#   0: No merging                                                      *
#   3: FxFx Merging - WARNING! Applies merging only at the hard-event  *
#      level. After showering an MLM-type merging should be applied as *
#      well. See http://amcatnlo.cern.ch/FxFx_merging.htm for details. *
#   4: UNLOPS merging (with pythia8 only). No interface from within    *
#      MG5_aMC available, but available in Pythia8.                    *
#  -1: NNLL+NLO jet-veto computation. See arxiv:1412.8408 [hep-ph].    *
#***********************************************************************
  0     = ickkw
#***********************************************************************
#
#***********************************************************************
# BW cutoff (M+/-bwcutoff*Gamma). Determines which resonances are      *
# written in the LHE event file                                        *
#***********************************************************************
  15.0  = bwcutoff
# Cuts on the jets. Jet clustering is performed by FastJet.            *
#  - When matching to a parton shower, these generation cuts should be *
#    considerably softer than the analysis cuts.                       *
#  - More specific cuts can be specified in SubProcesses/cuts.f        *
#***********************************************************************
  1.0   = jetalgo ! FastJet jet algorithm (1=kT, 0=C/A, -1=anti-kT)
  0.7   = jetradius ! The radius parameter for the jet algorithm
  30.0  = ptj ! Min jet transverse momentum
  4.0   = etaj ! Max jet abs(pseudo-rap) (a value .lt.0 means no cut)
#***********************************************************************
# Cuts on the charged leptons (e+, e-, mu+, mu-, tau+ and tau-)        *
# More specific cuts can be specified in SubProcesses/cuts.f           *
#***********************************************************************
  0.0   = ptl ! Min lepton transverse momentum
  -1.0  = etal ! Max lepton abs(pseudo-rap) (a value .lt.0 means no cut)
  0.0   = drll ! Min distance between opposite sign lepton pairs
  0.0   = drll_sf ! Min distance between opp. sign same-flavor lepton pairs
  0.0   = mll ! Min inv. mass of all opposite sign lepton pairs
  30.0  = mll_sf ! Min inv. mass of all opp. sign same-flavor lepton pairs
#***********************************************************************
# Photon-isolation cuts, according to hep-ph/9801442. When ptgmin=0,   *
# all the other parameters are ignored.                                *
# More specific cuts can be specified in SubProcesses/cuts.f           *
#***********************************************************************
  20.0  = ptgmin ! Min photon transverse momentum
  -1.0  = etagamma ! Max photon abs(pseudo-rap)
  0.4   = r0gamma ! Radius of isolation code
  1.0   = xn ! n parameter of eq.(3.4) in hep-ph/9801442
  1.0   = epsgamma ! epsilon_gamma parameter of eq.(3.4) in hep-ph/9801442
  True  = isoem ! isolate photons from EM energy (photons and leptons)
#***********************************************************************
# Cuts associated to MASSIVE particles identified by their PDG codes.  *
# All cuts are applied to both particles and anti-particles, so use    *
# POSITIVE PDG CODES only. Example of the syntax is {6 : 100} or       *
# {6:100, 25:200} for multiple particles                               *
#***********************************************************************
  {}    = pt_min_pdg ! Min pT for a massive particle
  {}    = pt_max_pdg ! Max pT for a massive particle
  {}    = mxx_min_pdg ! inv. mass for any pair of (anti)particles
#***********************************************************************
# For aMCfast+APPLGRID use in PDF fitting (http://amcfast.hepforge.org)*
#***********************************************************************
  0     = iappl ! aMCfast switch (0=OFF, 1=prepare grids, 2=fill grids)
#*********************************************************************
EOF
